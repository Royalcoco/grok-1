<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mint NFT on Ethereum</title>
    <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>
</head>
<body>
    <h1>Mint NFT on Ethereum</h1>
    <form id="mintForm">
        <label for="contractAddress">Contract Address:</label>
        <input type="text" id="contractAddress" required><br><br>

        <label for="privateKey">Private Key:</label>
        <input type="text" id="privateKey" required><br><br>

        <label for="accountAddress">Account Address:</label>
        <input type="text" id="accountAddress" required><br><br>

        <label for="tokenURI">Token URI (IPFS link):</label>
        <input type="text" id="tokenURI" required><br><br>

        <label for="amount">Amount (in Ether):</label>
        <input type="text" id="amount" required><br><br>

        <button type="submit">Mint NFT</button>
    </form>

    <div id="qrCodeContainer" style="margin-top: 20px;"></div>
    <a id="downloadLink" style="display: none;">Download NFT Details</a>

    <script>
        const mintNFT = async (contractAddress, privateKey, accountAddress, tokenURI, amount) => {
            const web3 = new Web3('https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID');
            const contractABI = [...]; // Replace with your contract's ABI
            const contract = new web3.eth.Contract(contractABI, contractAddress);

            const tx = contract.methods.mintNFT(accountAddress, tokenURI);
            const gas = await tx.estimateGas({ from: accountAddress });
            const gasPrice = await web3.eth.getGasPrice();
            const data = tx.encodeABI();
            const nonce = await web3.eth.getTransactionCount(accountAddress);

            const signedTx = await web3.eth.accounts.signTransaction({
                to: contractAddress,
                data,
                gas,
                gasPrice,
                nonce,
                chainId: 1, // Mainnet
                value: web3.utils.toWei(amount, 'ether')
            }, privateKey);

            const receipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);
            console.log(`Transaction hash: ${receipt.transactionHash}`);
            alert(`NFT minted successfully! Transaction hash: ${receipt.transactionHash}`);
            
            generateQRCode(receipt.transactionHash);
            downloadNFTDetails(receipt.transactionHash, contractAddress, accountAddress, tokenURI, amount);
        };

        const generateQRCode = (transactionHash) => {
            const qrCodeContainer = document.getElementById('qrCodeContainer');
            qrCodeContainer.innerHTML = '';
            QRCode.toCanvas(qrCodeContainer, transactionHash, { width: 200 }, (error) => {
                if (error) console.error(error);
                console.log('QR code generated!');
            });
        };

        const downloadNFTDetails = (transactionHash, contractAddress, accountAddress, tokenURI, amount) => {
            const data = `
                Transaction Hash: ${transactionHash}
                Contract Address: ${contractAddress}
                Account Address: ${accountAddress}
                Token URI: ${tokenURI}
                Amount: ${amount} Ether
            `;
            const blob = new Blob([data], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const downloadLink = document.getElementById('downloadLink');
            downloadLink.href = url;
            downloadLink.download = 'nft_details.txt';
            downloadLink.style.display = 'block';
            downloadLink.textContent = 'Download NFT Details';
        };

        document.getElementById('mintForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const contractAddress = document.getElementById('contractAddress').value;
            const privateKey = document.getElementById('privateKey').value;
            const accountAddress = document.getElementById('accountAddress').value;
            const tokenURI = document.getElementById('tokenURI').value;
            const amount = document.getElementById('amount').value;

            try {
                await mintNFT(contractAddress, privateKey, accountAddress, tokenURI, amount);
            } catch (error) {
                console.error(error);
                alert('Error minting NFT: ' + error.message);
            }
        });
    </script>
</body>
</html>
